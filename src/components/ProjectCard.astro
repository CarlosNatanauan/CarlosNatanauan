---
interface Project {
  name: string;
  description: string;
  tech: string[];
  repo?: string;
  live?: string;
  image?: string;
}

const { project } = Astro.props as { project: Project };
---

<article
  class="group rounded-2xl overflow-hidden border
         border-slate-200 bg-white shadow-sm
         dark:border-zinc-800 dark:bg-zinc-900
         transition duration-300 hover:shadow-lg hover:-translate-y-0.5"
>
  {project.image && (
    <img
      src={project.image}
      alt={project.name}
      class="w-full h-40 object-cover border-b
             border-slate-200 dark:border-zinc-800"
      loading="lazy"
      decoding="async"
    />
  )}

  <div class="p-5">
    <h3 class="font-semibold text-slate-900 dark:text-zinc-100">
      {project.name}
    </h3>

    <p class="mt-2 text-sm text-slate-600 dark:text-zinc-400">
      {project.description}
    </p>

    {project.tech?.length > 0 && (
      <div class="mt-3 flex flex-wrap gap-2">
        {project.tech.map((t) => (
          <span
            class="text-xs rounded-full px-2 py-0.5
                   border border-slate-200 text-slate-700 bg-slate-50
                   dark:border-zinc-700 dark:text-zinc-300 dark:bg-zinc-800/60"
          >
            {t}
          </span>
        ))}
      </div>
    )}

    <div class="mt-4 flex flex-wrap gap-4 text-sm">
      {project.live && (
        <a
          href={project.live}
          target="_blank" rel="noreferrer"
          class="font-medium text-slate-800 hover:text-indigo-600
                 dark:text-zinc-200 dark:hover:text-indigo-400"
        >
          Live
        </a>
      )}
      {project.repo && (
        <a
          href={project.repo}
          target="_blank" rel="noreferrer"
          class="font-medium text-slate-800 hover:text-indigo-600
                 dark:text-zinc-200 dark:hover:text-indigo-400"
        >
          GitHub
        </a>
      )}
    </div>
  </div>
</article>
